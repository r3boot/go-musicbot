// Code generated by go-swagger; DO NOT EDIT.

package apiserver

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json",
    "application/vnd.api+json",
    "application/x-www-form-urlencoded"
  ],
  "produces": [
    "application/json",
    "application/vnd.api+json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "The api serving the musicbot functionality.",
    "title": "musicbot",
    "version": "1.0.0"
  },
  "host": "localhost",
  "basePath": "/v1",
  "paths": {
    "/player/next": {
      "get": {
        "description": "Skip to the next track in the queue.",
        "summary": "Skip to the next track.",
        "responses": {
          "200": {
            "$ref": "#/responses/NowPlayingResponse"
          },
          "400": {
            "$ref": "#/responses/FailedToAddTrackResponse"
          },
          "403": {
            "$ref": "#/responses/NotAuthorizedResponse"
          },
          "500": {
            "$ref": "#/responses/Standard500ErrorResponse"
          }
        }
      }
    },
    "/player/nowplaying": {
      "get": {
        "description": "Get information about the currently playing track.",
        "summary": "Get information for current track.",
        "responses": {
          "200": {
            "$ref": "#/responses/NowPlayingResponse"
          },
          "400": {
            "$ref": "#/responses/NowPlayingFailedResponse"
          },
          "403": {
            "$ref": "#/responses/NotAuthorizedResponse"
          },
          "500": {
            "$ref": "#/responses/Standard500ErrorResponse"
          }
        }
      }
    },
    "/player/queue": {
      "get": {
        "description": "Returns a list of the currently queued tracks",
        "summary": "Get the play queue",
        "responses": {
          "200": {
            "$ref": "#/responses/QueueResponse"
          },
          "400": {
            "$ref": "#/responses/QueueFailedResponse"
          },
          "403": {
            "$ref": "#/responses/NotAuthorizedResponse"
          },
          "404": {
            "$ref": "#/responses/QueueEmptyResponse"
          },
          "500": {
            "$ref": "#/responses/Standard500ErrorResponse"
          }
        }
      }
    },
    "/rating/decrease": {
      "get": {
        "description": "Decreases the rating for the currently playing track.",
        "summary": "Decrease rating.",
        "responses": {
          "200": {
            "$ref": "#/responses/NowPlayingResponse"
          },
          "400": {
            "$ref": "#/responses/FailedToDecreaseRatingResponse"
          },
          "403": {
            "$ref": "#/responses/NotAuthorizedResponse"
          },
          "500": {
            "$ref": "#/responses/Standard500ErrorResponse"
          }
        }
      }
    },
    "/rating/increase": {
      "get": {
        "description": "Increases the rating for the currently playing track.",
        "summary": "Increase rating.",
        "responses": {
          "200": {
            "$ref": "#/responses/NowPlayingResponse"
          },
          "400": {
            "$ref": "#/responses/FailedToIncreaseRatingResponse"
          },
          "403": {
            "$ref": "#/responses/NotAuthorizedResponse"
          },
          "500": {
            "$ref": "#/responses/Standard500ErrorResponse"
          }
        }
      }
    },
    "/track/download": {
      "post": {
        "description": "Adds a new track to the download queue.",
        "summary": "Add download to queue.",
        "parameters": [
          {
            "$ref": "#/parameters/Download"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/DownloadSuccesfullyAddedResponse"
          },
          "400": {
            "$ref": "#/responses/DownloadFailedResponse"
          },
          "403": {
            "$ref": "#/responses/NotAuthorizedResponse"
          },
          "404": {
            "$ref": "#/responses/YidNotFoundResponse"
          },
          "409": {
            "$ref": "#/responses/YidAlreadyExistsResponse"
          },
          "413": {
            "$ref": "#/responses/TooLargeForStreamResponse"
          },
          "500": {
            "$ref": "#/responses/Standard500ErrorResponse"
          }
        }
      }
    },
    "/track/request": {
      "post": {
        "description": "Search for a track and add it to the play queue.",
        "summary": "Requests a track.",
        "parameters": [
          {
            "$ref": "#/parameters/Request"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/SuccesfullyRequestedTrackResponse"
          },
          "400": {
            "$ref": "#/responses/FailedToQueueTrackResponse"
          },
          "403": {
            "$ref": "#/responses/NotAuthorizedResponse"
          },
          "404": {
            "$ref": "#/responses/NoQueryResultsFoundResponse"
          },
          "500": {
            "$ref": "#/responses/Standard500ErrorResponse"
          }
        }
      }
    },
    "/track/search": {
      "post": {
        "description": "Search for a track and return a list of found items.",
        "summary": "Search for a track.",
        "parameters": [
          {
            "$ref": "#/parameters/Request"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/SearchResultsResponse"
          },
          "400": {
            "$ref": "#/responses/FailedToSearchResponse"
          },
          "403": {
            "$ref": "#/responses/NotAuthorizedResponse"
          },
          "404": {
            "$ref": "#/responses/NoQueryResultsFoundResponse"
          },
          "500": {
            "$ref": "#/responses/Standard500ErrorResponse"
          }
        }
      }
    }
  },
  "definitions": {
    "AddedOn": {
      "type": "string",
      "maxLength": 128
    },
    "Download": {
      "type": "object",
      "required": [
        "yid",
        "submitter"
      ],
      "properties": {
        "submitter": {
          "$ref": "#/definitions/Submitter"
        },
        "yid": {
          "$ref": "#/definitions/Yid"
        }
      }
    },
    "Duration": {
      "type": "integer",
      "maximum": 65535,
      "minimum": 1
    },
    "Elapsed": {
      "type": "integer",
      "maximum": 65535
    },
    "Error": {
      "type": "object",
      "properties": {
        "detail": {
          "type": "string",
          "maxLength": 512,
          "minLength": 1
        },
        "source": {
          "$ref": "#/definitions/ErrorPointer"
        },
        "status": {
          "type": "string",
          "maxLength": 3,
          "minLength": 3,
          "pattern": "^[2345][0-9]{2}$"
        }
      }
    },
    "ErrorPointer": {
      "type": "object",
      "properties": {
        "pointer": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1
        }
      }
    },
    "Filename": {
      "type": "string",
      "maxLength": 1024,
      "minLength": 16,
      "pattern": ".*[a-zA-Z0-9_-]{11}.mp3"
    },
    "Id": {
      "type": "integer"
    },
    "Priority": {
      "type": "integer",
      "maximum": 10
    },
    "Query": {
      "type": "string",
      "maxLength": 128,
      "minLength": 1,
      "pattern": "[a-zA-Z0-9_-]{1,128}"
    },
    "QueueItem": {
      "type": "object",
      "required": [
        "track",
        "submitter"
      ],
      "properties": {
        "submitter": {
          "$ref": "#/definitions/Submitter"
        },
        "track": {
          "$ref": "#/definitions/Track"
        }
      }
    },
    "Rating": {
      "type": "integer",
      "maximum": 65535
    },
    "Request": {
      "type": "object",
      "required": [
        "query",
        "submitter"
      ],
      "properties": {
        "query": {
          "$ref": "#/definitions/Query"
        },
        "submitter": {
          "$ref": "#/definitions/Submitter"
        }
      }
    },
    "Submitter": {
      "type": "string",
      "maxLength": 128,
      "minLength": 1
    },
    "Track": {
      "type": "object",
      "required": [
        "id",
        "filename",
        "rating",
        "submitter",
        "duration",
        "addedon"
      ],
      "properties": {
        "addedon": {
          "$ref": "#/definitions/AddedOn"
        },
        "duration": {
          "$ref": "#/definitions/Duration"
        },
        "elapsed": {
          "$ref": "#/definitions/Elapsed"
        },
        "filename": {
          "$ref": "#/definitions/Filename"
        },
        "id": {
          "$ref": "#/definitions/Id"
        },
        "priority": {
          "$ref": "#/definitions/Priority"
        },
        "rating": {
          "$ref": "#/definitions/Rating"
        },
        "submitter": {
          "$ref": "#/definitions/Submitter"
        }
      }
    },
    "Tracks": {
      "type": "array",
      "maxItems": 16384,
      "uniqueItems": true,
      "items": {
        "$ref": "#/definitions/Track"
      }
    },
    "Yid": {
      "type": "string",
      "maxLength": 11,
      "minLength": 11,
      "pattern": "[a-zA-Z0-9_-]{11}"
    }
  },
  "parameters": {
    "Download": {
      "description": "The request body for the download.",
      "name": "body",
      "in": "body",
      "required": true,
      "schema": {
        "$ref": "#/definitions/Download"
      }
    },
    "Request": {
      "description": "The request body for the request.",
      "name": "request",
      "in": "body",
      "required": true,
      "schema": {
        "$ref": "#/definitions/Request"
      }
    }
  },
  "responses": {
    "DownloadFailedResponse": {
      "description": "Failed to download yid"
    },
    "DownloadSuccesfullyAddedResponse": {
      "description": "Download succesfully added.",
      "schema": {
        "$ref": "#/definitions/Track"
      }
    },
    "FailedToAddTrackResponse": {
      "description": "Failed to skip to the next track."
    },
    "FailedToDecreaseRatingResponse": {
      "description": "Failed to decrease rating."
    },
    "FailedToIncreaseRatingResponse": {
      "description": "Failed to increase rating."
    },
    "FailedToQueueTrackResponse": {
      "description": "Failed to add track to queue."
    },
    "FailedToSearchResponse": {
      "description": "Failed to search"
    },
    "NoQueryResultsFoundResponse": {
      "description": "No results found for your query."
    },
    "NotAuthorizedResponse": {
      "description": "Not authorized"
    },
    "NowPlayingFailedResponse": {
      "description": "Failed fetch nowplaying info."
    },
    "NowPlayingResponse": {
      "description": "Succesfully fetched nowplaying info.",
      "schema": {
        "$ref": "#/definitions/Track"
      }
    },
    "QueueEmptyResponse": {
      "description": "No items found for query."
    },
    "QueueFailedResponse": {
      "description": "Failed to fetch queue"
    },
    "QueueResponse": {
      "description": "Succesfully requested a track.",
      "schema": {
        "$ref": "#/definitions/Tracks"
      }
    },
    "SearchResultsResponse": {
      "description": "Results for query.",
      "schema": {
        "$ref": "#/definitions/Tracks"
      }
    },
    "Standard500ErrorResponse": {
      "description": "An unexpected error occurred.",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    },
    "SuccesfullyRequestedTrackResponse": {
      "description": "Track succesfully added to queue.",
      "schema": {
        "$ref": "#/definitions/QueueItem"
      }
    },
    "TooLargeForStreamResponse": {
      "description": "Track is too large for stream"
    },
    "YidAlreadyExistsResponse": {
      "description": "Yid already downloaded"
    },
    "YidNotFoundResponse": {
      "description": "No file found at Youtube ID."
    }
  },
  "securityDefinitions": {
    "AccessSecurity": {
      "type": "apiKey",
      "name": "X-Access-Token",
      "in": "header"
    }
  },
  "security": [
    {
      "AccessSecurity": []
    }
  ]
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json",
    "application/vnd.api+json",
    "application/x-www-form-urlencoded"
  ],
  "produces": [
    "application/json",
    "application/vnd.api+json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "The api serving the musicbot functionality.",
    "title": "musicbot",
    "version": "1.0.0"
  },
  "host": "localhost",
  "basePath": "/v1",
  "paths": {
    "/player/next": {
      "get": {
        "description": "Skip to the next track in the queue.",
        "summary": "Skip to the next track.",
        "responses": {
          "200": {
            "description": "Succesfully fetched nowplaying info.",
            "schema": {
              "type": "object",
              "required": [
                "id",
                "filename",
                "rating",
                "submitter",
                "duration",
                "addedon"
              ],
              "properties": {
                "addedon": {
                  "type": "string",
                  "maxLength": 128,
                  "minLength": 0
                },
                "duration": {
                  "type": "integer",
                  "maximum": 65535,
                  "minimum": 1
                },
                "elapsed": {
                  "type": "integer",
                  "maximum": 65535,
                  "minimum": 0
                },
                "filename": {
                  "type": "string",
                  "maxLength": 1024,
                  "minLength": 16,
                  "pattern": ".*[a-zA-Z0-9_-]{11}.mp3"
                },
                "id": {
                  "type": "integer"
                },
                "priority": {
                  "type": "integer",
                  "maximum": 10,
                  "minimum": 0
                },
                "rating": {
                  "type": "integer",
                  "maximum": 65535,
                  "minimum": 0
                },
                "submitter": {
                  "type": "string",
                  "maxLength": 128,
                  "minLength": 1
                }
              }
            }
          },
          "400": {
            "description": "Failed to skip to the next track."
          },
          "403": {
            "description": "Not authorized"
          },
          "500": {
            "description": "An unexpected error occurred.",
            "schema": {
              "type": "object",
              "properties": {
                "detail": {
                  "type": "string",
                  "maxLength": 512,
                  "minLength": 1
                },
                "source": {
                  "type": "object",
                  "properties": {
                    "pointer": {
                      "type": "string",
                      "maxLength": 128,
                      "minLength": 1
                    }
                  }
                },
                "status": {
                  "type": "string",
                  "maxLength": 3,
                  "minLength": 3,
                  "pattern": "^[2345][0-9]{2}$"
                }
              }
            }
          }
        }
      }
    },
    "/player/nowplaying": {
      "get": {
        "description": "Get information about the currently playing track.",
        "summary": "Get information for current track.",
        "responses": {
          "200": {
            "description": "Succesfully fetched nowplaying info.",
            "schema": {
              "type": "object",
              "required": [
                "id",
                "filename",
                "rating",
                "submitter",
                "duration",
                "addedon"
              ],
              "properties": {
                "addedon": {
                  "type": "string",
                  "maxLength": 128,
                  "minLength": 0
                },
                "duration": {
                  "type": "integer",
                  "maximum": 65535,
                  "minimum": 1
                },
                "elapsed": {
                  "type": "integer",
                  "maximum": 65535,
                  "minimum": 0
                },
                "filename": {
                  "type": "string",
                  "maxLength": 1024,
                  "minLength": 16,
                  "pattern": ".*[a-zA-Z0-9_-]{11}.mp3"
                },
                "id": {
                  "type": "integer"
                },
                "priority": {
                  "type": "integer",
                  "maximum": 10,
                  "minimum": 0
                },
                "rating": {
                  "type": "integer",
                  "maximum": 65535,
                  "minimum": 0
                },
                "submitter": {
                  "type": "string",
                  "maxLength": 128,
                  "minLength": 1
                }
              }
            }
          },
          "400": {
            "description": "Failed fetch nowplaying info."
          },
          "403": {
            "description": "Not authorized"
          },
          "500": {
            "description": "An unexpected error occurred.",
            "schema": {
              "type": "object",
              "properties": {
                "detail": {
                  "type": "string",
                  "maxLength": 512,
                  "minLength": 1
                },
                "source": {
                  "type": "object",
                  "properties": {
                    "pointer": {
                      "type": "string",
                      "maxLength": 128,
                      "minLength": 1
                    }
                  }
                },
                "status": {
                  "type": "string",
                  "maxLength": 3,
                  "minLength": 3,
                  "pattern": "^[2345][0-9]{2}$"
                }
              }
            }
          }
        }
      }
    },
    "/player/queue": {
      "get": {
        "description": "Returns a list of the currently queued tracks",
        "summary": "Get the play queue",
        "responses": {
          "200": {
            "description": "Succesfully requested a track.",
            "schema": {
              "type": "array",
              "maxItems": 16384,
              "minItems": 0,
              "uniqueItems": true,
              "items": {
                "$ref": "#/definitions/GetPlayerQueueOKBodyItems0"
              }
            }
          },
          "400": {
            "description": "Failed to fetch queue"
          },
          "403": {
            "description": "Not authorized"
          },
          "404": {
            "description": "No items found for query."
          },
          "500": {
            "description": "An unexpected error occurred.",
            "schema": {
              "type": "object",
              "properties": {
                "detail": {
                  "type": "string",
                  "maxLength": 512,
                  "minLength": 1
                },
                "source": {
                  "type": "object",
                  "properties": {
                    "pointer": {
                      "type": "string",
                      "maxLength": 128,
                      "minLength": 1
                    }
                  }
                },
                "status": {
                  "type": "string",
                  "maxLength": 3,
                  "minLength": 3,
                  "pattern": "^[2345][0-9]{2}$"
                }
              }
            }
          }
        }
      }
    },
    "/rating/decrease": {
      "get": {
        "description": "Decreases the rating for the currently playing track.",
        "summary": "Decrease rating.",
        "responses": {
          "200": {
            "description": "Succesfully fetched nowplaying info.",
            "schema": {
              "type": "object",
              "required": [
                "id",
                "filename",
                "rating",
                "submitter",
                "duration",
                "addedon"
              ],
              "properties": {
                "addedon": {
                  "type": "string",
                  "maxLength": 128,
                  "minLength": 0
                },
                "duration": {
                  "type": "integer",
                  "maximum": 65535,
                  "minimum": 1
                },
                "elapsed": {
                  "type": "integer",
                  "maximum": 65535,
                  "minimum": 0
                },
                "filename": {
                  "type": "string",
                  "maxLength": 1024,
                  "minLength": 16,
                  "pattern": ".*[a-zA-Z0-9_-]{11}.mp3"
                },
                "id": {
                  "type": "integer"
                },
                "priority": {
                  "type": "integer",
                  "maximum": 10,
                  "minimum": 0
                },
                "rating": {
                  "type": "integer",
                  "maximum": 65535,
                  "minimum": 0
                },
                "submitter": {
                  "type": "string",
                  "maxLength": 128,
                  "minLength": 1
                }
              }
            }
          },
          "400": {
            "description": "Failed to decrease rating."
          },
          "403": {
            "description": "Not authorized"
          },
          "500": {
            "description": "An unexpected error occurred.",
            "schema": {
              "type": "object",
              "properties": {
                "detail": {
                  "type": "string",
                  "maxLength": 512,
                  "minLength": 1
                },
                "source": {
                  "type": "object",
                  "properties": {
                    "pointer": {
                      "type": "string",
                      "maxLength": 128,
                      "minLength": 1
                    }
                  }
                },
                "status": {
                  "type": "string",
                  "maxLength": 3,
                  "minLength": 3,
                  "pattern": "^[2345][0-9]{2}$"
                }
              }
            }
          }
        }
      }
    },
    "/rating/increase": {
      "get": {
        "description": "Increases the rating for the currently playing track.",
        "summary": "Increase rating.",
        "responses": {
          "200": {
            "description": "Succesfully fetched nowplaying info.",
            "schema": {
              "type": "object",
              "required": [
                "id",
                "filename",
                "rating",
                "submitter",
                "duration",
                "addedon"
              ],
              "properties": {
                "addedon": {
                  "type": "string",
                  "maxLength": 128,
                  "minLength": 0
                },
                "duration": {
                  "type": "integer",
                  "maximum": 65535,
                  "minimum": 1
                },
                "elapsed": {
                  "type": "integer",
                  "maximum": 65535,
                  "minimum": 0
                },
                "filename": {
                  "type": "string",
                  "maxLength": 1024,
                  "minLength": 16,
                  "pattern": ".*[a-zA-Z0-9_-]{11}.mp3"
                },
                "id": {
                  "type": "integer"
                },
                "priority": {
                  "type": "integer",
                  "maximum": 10,
                  "minimum": 0
                },
                "rating": {
                  "type": "integer",
                  "maximum": 65535,
                  "minimum": 0
                },
                "submitter": {
                  "type": "string",
                  "maxLength": 128,
                  "minLength": 1
                }
              }
            }
          },
          "400": {
            "description": "Failed to increase rating."
          },
          "403": {
            "description": "Not authorized"
          },
          "500": {
            "description": "An unexpected error occurred.",
            "schema": {
              "type": "object",
              "properties": {
                "detail": {
                  "type": "string",
                  "maxLength": 512,
                  "minLength": 1
                },
                "source": {
                  "type": "object",
                  "properties": {
                    "pointer": {
                      "type": "string",
                      "maxLength": 128,
                      "minLength": 1
                    }
                  }
                },
                "status": {
                  "type": "string",
                  "maxLength": 3,
                  "minLength": 3,
                  "pattern": "^[2345][0-9]{2}$"
                }
              }
            }
          }
        }
      }
    },
    "/track/download": {
      "post": {
        "description": "Adds a new track to the download queue.",
        "summary": "Add download to queue.",
        "parameters": [
          {
            "description": "The request body for the download.",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "yid",
                "submitter"
              ],
              "properties": {
                "submitter": {
                  "type": "string",
                  "maxLength": 128,
                  "minLength": 1
                },
                "yid": {
                  "type": "string",
                  "maxLength": 11,
                  "minLength": 11,
                  "pattern": "[a-zA-Z0-9_-]{11}"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Download succesfully added.",
            "schema": {
              "type": "object",
              "required": [
                "id",
                "filename",
                "rating",
                "submitter",
                "duration",
                "addedon"
              ],
              "properties": {
                "addedon": {
                  "type": "string",
                  "maxLength": 128,
                  "minLength": 0
                },
                "duration": {
                  "type": "integer",
                  "maximum": 65535,
                  "minimum": 1
                },
                "elapsed": {
                  "type": "integer",
                  "maximum": 65535,
                  "minimum": 0
                },
                "filename": {
                  "type": "string",
                  "maxLength": 1024,
                  "minLength": 16,
                  "pattern": ".*[a-zA-Z0-9_-]{11}.mp3"
                },
                "id": {
                  "type": "integer"
                },
                "priority": {
                  "type": "integer",
                  "maximum": 10,
                  "minimum": 0
                },
                "rating": {
                  "type": "integer",
                  "maximum": 65535,
                  "minimum": 0
                },
                "submitter": {
                  "type": "string",
                  "maxLength": 128,
                  "minLength": 1
                }
              }
            }
          },
          "400": {
            "description": "Failed to download yid"
          },
          "403": {
            "description": "Not authorized"
          },
          "404": {
            "description": "No file found at Youtube ID."
          },
          "409": {
            "description": "Yid already downloaded"
          },
          "413": {
            "description": "Track is too large for stream"
          },
          "500": {
            "description": "An unexpected error occurred.",
            "schema": {
              "type": "object",
              "properties": {
                "detail": {
                  "type": "string",
                  "maxLength": 512,
                  "minLength": 1
                },
                "source": {
                  "type": "object",
                  "properties": {
                    "pointer": {
                      "type": "string",
                      "maxLength": 128,
                      "minLength": 1
                    }
                  }
                },
                "status": {
                  "type": "string",
                  "maxLength": 3,
                  "minLength": 3,
                  "pattern": "^[2345][0-9]{2}$"
                }
              }
            }
          }
        }
      }
    },
    "/track/request": {
      "post": {
        "description": "Search for a track and add it to the play queue.",
        "summary": "Requests a track.",
        "parameters": [
          {
            "description": "The request body for the request.",
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "query",
                "submitter"
              ],
              "properties": {
                "query": {
                  "type": "string",
                  "maxLength": 128,
                  "minLength": 1,
                  "pattern": "[a-zA-Z0-9_-]{1,128}"
                },
                "submitter": {
                  "type": "string",
                  "maxLength": 128,
                  "minLength": 1
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Track succesfully added to queue.",
            "schema": {
              "type": "object",
              "required": [
                "track",
                "submitter"
              ],
              "properties": {
                "submitter": {
                  "type": "string",
                  "maxLength": 128,
                  "minLength": 1
                },
                "track": {
                  "type": "object",
                  "required": [
                    "id",
                    "filename",
                    "rating",
                    "submitter",
                    "duration",
                    "addedon"
                  ],
                  "properties": {
                    "addedon": {
                      "type": "string",
                      "maxLength": 128,
                      "minLength": 0
                    },
                    "duration": {
                      "type": "integer",
                      "maximum": 65535,
                      "minimum": 1
                    },
                    "elapsed": {
                      "type": "integer",
                      "maximum": 65535,
                      "minimum": 0
                    },
                    "filename": {
                      "type": "string",
                      "maxLength": 1024,
                      "minLength": 16,
                      "pattern": ".*[a-zA-Z0-9_-]{11}.mp3"
                    },
                    "id": {
                      "type": "integer"
                    },
                    "priority": {
                      "type": "integer",
                      "maximum": 10,
                      "minimum": 0
                    },
                    "rating": {
                      "type": "integer",
                      "maximum": 65535,
                      "minimum": 0
                    },
                    "submitter": {
                      "type": "string",
                      "maxLength": 128,
                      "minLength": 1
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed to add track to queue."
          },
          "403": {
            "description": "Not authorized"
          },
          "404": {
            "description": "No results found for your query."
          },
          "500": {
            "description": "An unexpected error occurred.",
            "schema": {
              "type": "object",
              "properties": {
                "detail": {
                  "type": "string",
                  "maxLength": 512,
                  "minLength": 1
                },
                "source": {
                  "type": "object",
                  "properties": {
                    "pointer": {
                      "type": "string",
                      "maxLength": 128,
                      "minLength": 1
                    }
                  }
                },
                "status": {
                  "type": "string",
                  "maxLength": 3,
                  "minLength": 3,
                  "pattern": "^[2345][0-9]{2}$"
                }
              }
            }
          }
        }
      }
    },
    "/track/search": {
      "post": {
        "description": "Search for a track and return a list of found items.",
        "summary": "Search for a track.",
        "parameters": [
          {
            "description": "The request body for the request.",
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "query",
                "submitter"
              ],
              "properties": {
                "query": {
                  "type": "string",
                  "maxLength": 128,
                  "minLength": 1,
                  "pattern": "[a-zA-Z0-9_-]{1,128}"
                },
                "submitter": {
                  "type": "string",
                  "maxLength": 128,
                  "minLength": 1
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Results for query.",
            "schema": {
              "type": "array",
              "maxItems": 16384,
              "minItems": 0,
              "uniqueItems": true,
              "items": {
                "$ref": "#/definitions/PostTrackSearchOKBodyItems0"
              }
            }
          },
          "400": {
            "description": "Failed to search"
          },
          "403": {
            "description": "Not authorized"
          },
          "404": {
            "description": "No results found for your query."
          },
          "500": {
            "description": "An unexpected error occurred.",
            "schema": {
              "type": "object",
              "properties": {
                "detail": {
                  "type": "string",
                  "maxLength": 512,
                  "minLength": 1
                },
                "source": {
                  "type": "object",
                  "properties": {
                    "pointer": {
                      "type": "string",
                      "maxLength": 128,
                      "minLength": 1
                    }
                  }
                },
                "status": {
                  "type": "string",
                  "maxLength": 3,
                  "minLength": 3,
                  "pattern": "^[2345][0-9]{2}$"
                }
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "AddedOn": {
      "type": "string",
      "maxLength": 128,
      "minLength": 0
    },
    "Download": {
      "type": "object",
      "required": [
        "yid",
        "submitter"
      ],
      "properties": {
        "submitter": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1
        },
        "yid": {
          "type": "string",
          "maxLength": 11,
          "minLength": 11,
          "pattern": "[a-zA-Z0-9_-]{11}"
        }
      }
    },
    "Duration": {
      "type": "integer",
      "maximum": 65535,
      "minimum": 1
    },
    "Elapsed": {
      "type": "integer",
      "maximum": 65535,
      "minimum": 0
    },
    "Error": {
      "type": "object",
      "properties": {
        "detail": {
          "type": "string",
          "maxLength": 512,
          "minLength": 1
        },
        "source": {
          "type": "object",
          "properties": {
            "pointer": {
              "type": "string",
              "maxLength": 128,
              "minLength": 1
            }
          }
        },
        "status": {
          "type": "string",
          "maxLength": 3,
          "minLength": 3,
          "pattern": "^[2345][0-9]{2}$"
        }
      }
    },
    "ErrorPointer": {
      "type": "object",
      "properties": {
        "pointer": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1
        }
      }
    },
    "ErrorSource": {
      "type": "object",
      "properties": {
        "pointer": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1
        }
      }
    },
    "Filename": {
      "type": "string",
      "maxLength": 1024,
      "minLength": 16,
      "pattern": ".*[a-zA-Z0-9_-]{11}.mp3"
    },
    "GetPlayerNextInternalServerErrorBodySource": {
      "type": "object",
      "properties": {
        "pointer": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1
        }
      }
    },
    "GetPlayerNowplayingInternalServerErrorBodySource": {
      "type": "object",
      "properties": {
        "pointer": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1
        }
      }
    },
    "GetPlayerQueueInternalServerErrorBodySource": {
      "type": "object",
      "properties": {
        "pointer": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1
        }
      }
    },
    "GetPlayerQueueOKBodyItems0": {
      "type": "object",
      "required": [
        "id",
        "filename",
        "rating",
        "submitter",
        "duration",
        "addedon"
      ],
      "properties": {
        "addedon": {
          "type": "string",
          "maxLength": 128,
          "minLength": 0
        },
        "duration": {
          "type": "integer",
          "maximum": 65535,
          "minimum": 1
        },
        "elapsed": {
          "type": "integer",
          "maximum": 65535,
          "minimum": 0
        },
        "filename": {
          "type": "string",
          "maxLength": 1024,
          "minLength": 16,
          "pattern": ".*[a-zA-Z0-9_-]{11}.mp3"
        },
        "id": {
          "type": "integer"
        },
        "priority": {
          "type": "integer",
          "maximum": 10,
          "minimum": 0
        },
        "rating": {
          "type": "integer",
          "maximum": 65535,
          "minimum": 0
        },
        "submitter": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1
        }
      }
    },
    "GetRatingDecreaseInternalServerErrorBodySource": {
      "type": "object",
      "properties": {
        "pointer": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1
        }
      }
    },
    "GetRatingIncreaseInternalServerErrorBodySource": {
      "type": "object",
      "properties": {
        "pointer": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1
        }
      }
    },
    "Id": {
      "type": "integer"
    },
    "PostTrackDownloadInternalServerErrorBodySource": {
      "type": "object",
      "properties": {
        "pointer": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1
        }
      }
    },
    "PostTrackRequestInternalServerErrorBodySource": {
      "type": "object",
      "properties": {
        "pointer": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1
        }
      }
    },
    "PostTrackRequestOKBodyTrack": {
      "type": "object",
      "required": [
        "id",
        "filename",
        "rating",
        "submitter",
        "duration",
        "addedon"
      ],
      "properties": {
        "addedon": {
          "type": "string",
          "maxLength": 128,
          "minLength": 0
        },
        "duration": {
          "type": "integer",
          "maximum": 65535,
          "minimum": 1
        },
        "elapsed": {
          "type": "integer",
          "maximum": 65535,
          "minimum": 0
        },
        "filename": {
          "type": "string",
          "maxLength": 1024,
          "minLength": 16,
          "pattern": ".*[a-zA-Z0-9_-]{11}.mp3"
        },
        "id": {
          "type": "integer"
        },
        "priority": {
          "type": "integer",
          "maximum": 10,
          "minimum": 0
        },
        "rating": {
          "type": "integer",
          "maximum": 65535,
          "minimum": 0
        },
        "submitter": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1
        }
      }
    },
    "PostTrackSearchInternalServerErrorBodySource": {
      "type": "object",
      "properties": {
        "pointer": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1
        }
      }
    },
    "PostTrackSearchOKBodyItems0": {
      "type": "object",
      "required": [
        "id",
        "filename",
        "rating",
        "submitter",
        "duration",
        "addedon"
      ],
      "properties": {
        "addedon": {
          "type": "string",
          "maxLength": 128,
          "minLength": 0
        },
        "duration": {
          "type": "integer",
          "maximum": 65535,
          "minimum": 1
        },
        "elapsed": {
          "type": "integer",
          "maximum": 65535,
          "minimum": 0
        },
        "filename": {
          "type": "string",
          "maxLength": 1024,
          "minLength": 16,
          "pattern": ".*[a-zA-Z0-9_-]{11}.mp3"
        },
        "id": {
          "type": "integer"
        },
        "priority": {
          "type": "integer",
          "maximum": 10,
          "minimum": 0
        },
        "rating": {
          "type": "integer",
          "maximum": 65535,
          "minimum": 0
        },
        "submitter": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1
        }
      }
    },
    "Priority": {
      "type": "integer",
      "maximum": 10,
      "minimum": 0
    },
    "Query": {
      "type": "string",
      "maxLength": 128,
      "minLength": 1,
      "pattern": "[a-zA-Z0-9_-]{1,128}"
    },
    "QueueItem": {
      "type": "object",
      "required": [
        "track",
        "submitter"
      ],
      "properties": {
        "submitter": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1
        },
        "track": {
          "type": "object",
          "required": [
            "id",
            "filename",
            "rating",
            "submitter",
            "duration",
            "addedon"
          ],
          "properties": {
            "addedon": {
              "type": "string",
              "maxLength": 128,
              "minLength": 0
            },
            "duration": {
              "type": "integer",
              "maximum": 65535,
              "minimum": 1
            },
            "elapsed": {
              "type": "integer",
              "maximum": 65535,
              "minimum": 0
            },
            "filename": {
              "type": "string",
              "maxLength": 1024,
              "minLength": 16,
              "pattern": ".*[a-zA-Z0-9_-]{11}.mp3"
            },
            "id": {
              "type": "integer"
            },
            "priority": {
              "type": "integer",
              "maximum": 10,
              "minimum": 0
            },
            "rating": {
              "type": "integer",
              "maximum": 65535,
              "minimum": 0
            },
            "submitter": {
              "type": "string",
              "maxLength": 128,
              "minLength": 1
            }
          }
        }
      }
    },
    "QueueItemTrack": {
      "type": "object",
      "required": [
        "id",
        "filename",
        "rating",
        "submitter",
        "duration",
        "addedon"
      ],
      "properties": {
        "addedon": {
          "type": "string",
          "maxLength": 128,
          "minLength": 0
        },
        "duration": {
          "type": "integer",
          "maximum": 65535,
          "minimum": 1
        },
        "elapsed": {
          "type": "integer",
          "maximum": 65535,
          "minimum": 0
        },
        "filename": {
          "type": "string",
          "maxLength": 1024,
          "minLength": 16,
          "pattern": ".*[a-zA-Z0-9_-]{11}.mp3"
        },
        "id": {
          "type": "integer"
        },
        "priority": {
          "type": "integer",
          "maximum": 10,
          "minimum": 0
        },
        "rating": {
          "type": "integer",
          "maximum": 65535,
          "minimum": 0
        },
        "submitter": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1
        }
      }
    },
    "Rating": {
      "type": "integer",
      "maximum": 65535,
      "minimum": 0
    },
    "Request": {
      "type": "object",
      "required": [
        "query",
        "submitter"
      ],
      "properties": {
        "query": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1,
          "pattern": "[a-zA-Z0-9_-]{1,128}"
        },
        "submitter": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1
        }
      }
    },
    "Submitter": {
      "type": "string",
      "maxLength": 128,
      "minLength": 1
    },
    "Track": {
      "type": "object",
      "required": [
        "id",
        "filename",
        "rating",
        "submitter",
        "duration",
        "addedon"
      ],
      "properties": {
        "addedon": {
          "type": "string",
          "maxLength": 128,
          "minLength": 0
        },
        "duration": {
          "type": "integer",
          "maximum": 65535,
          "minimum": 1
        },
        "elapsed": {
          "type": "integer",
          "maximum": 65535,
          "minimum": 0
        },
        "filename": {
          "type": "string",
          "maxLength": 1024,
          "minLength": 16,
          "pattern": ".*[a-zA-Z0-9_-]{11}.mp3"
        },
        "id": {
          "type": "integer"
        },
        "priority": {
          "type": "integer",
          "maximum": 10,
          "minimum": 0
        },
        "rating": {
          "type": "integer",
          "maximum": 65535,
          "minimum": 0
        },
        "submitter": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1
        }
      }
    },
    "Tracks": {
      "type": "array",
      "maxItems": 16384,
      "minItems": 0,
      "uniqueItems": true,
      "items": {
        "$ref": "#/definitions/TracksItems0"
      }
    },
    "TracksItems0": {
      "type": "object",
      "required": [
        "id",
        "filename",
        "rating",
        "submitter",
        "duration",
        "addedon"
      ],
      "properties": {
        "addedon": {
          "type": "string",
          "maxLength": 128,
          "minLength": 0
        },
        "duration": {
          "type": "integer",
          "maximum": 65535,
          "minimum": 1
        },
        "elapsed": {
          "type": "integer",
          "maximum": 65535,
          "minimum": 0
        },
        "filename": {
          "type": "string",
          "maxLength": 1024,
          "minLength": 16,
          "pattern": ".*[a-zA-Z0-9_-]{11}.mp3"
        },
        "id": {
          "type": "integer"
        },
        "priority": {
          "type": "integer",
          "maximum": 10,
          "minimum": 0
        },
        "rating": {
          "type": "integer",
          "maximum": 65535,
          "minimum": 0
        },
        "submitter": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1
        }
      }
    },
    "Yid": {
      "type": "string",
      "maxLength": 11,
      "minLength": 11,
      "pattern": "[a-zA-Z0-9_-]{11}"
    }
  },
  "parameters": {
    "Download": {
      "description": "The request body for the download.",
      "name": "body",
      "in": "body",
      "required": true,
      "schema": {
        "type": "object",
        "required": [
          "yid",
          "submitter"
        ],
        "properties": {
          "submitter": {
            "type": "string",
            "maxLength": 128,
            "minLength": 1
          },
          "yid": {
            "type": "string",
            "maxLength": 11,
            "minLength": 11,
            "pattern": "[a-zA-Z0-9_-]{11}"
          }
        }
      }
    },
    "Request": {
      "description": "The request body for the request.",
      "name": "request",
      "in": "body",
      "required": true,
      "schema": {
        "type": "object",
        "required": [
          "query",
          "submitter"
        ],
        "properties": {
          "query": {
            "type": "string",
            "maxLength": 128,
            "minLength": 1,
            "pattern": "[a-zA-Z0-9_-]{1,128}"
          },
          "submitter": {
            "type": "string",
            "maxLength": 128,
            "minLength": 1
          }
        }
      }
    }
  },
  "responses": {
    "DownloadFailedResponse": {
      "description": "Failed to download yid"
    },
    "DownloadSuccesfullyAddedResponse": {
      "description": "Download succesfully added.",
      "schema": {
        "type": "object",
        "required": [
          "id",
          "filename",
          "rating",
          "submitter",
          "duration",
          "addedon"
        ],
        "properties": {
          "addedon": {
            "type": "string",
            "maxLength": 128,
            "minLength": 0
          },
          "duration": {
            "type": "integer",
            "maximum": 65535,
            "minimum": 1
          },
          "elapsed": {
            "type": "integer",
            "maximum": 65535,
            "minimum": 0
          },
          "filename": {
            "type": "string",
            "maxLength": 1024,
            "minLength": 16,
            "pattern": ".*[a-zA-Z0-9_-]{11}.mp3"
          },
          "id": {
            "type": "integer"
          },
          "priority": {
            "type": "integer",
            "maximum": 10,
            "minimum": 0
          },
          "rating": {
            "type": "integer",
            "maximum": 65535,
            "minimum": 0
          },
          "submitter": {
            "type": "string",
            "maxLength": 128,
            "minLength": 1
          }
        }
      }
    },
    "FailedToAddTrackResponse": {
      "description": "Failed to skip to the next track."
    },
    "FailedToDecreaseRatingResponse": {
      "description": "Failed to decrease rating."
    },
    "FailedToIncreaseRatingResponse": {
      "description": "Failed to increase rating."
    },
    "FailedToQueueTrackResponse": {
      "description": "Failed to add track to queue."
    },
    "FailedToSearchResponse": {
      "description": "Failed to search"
    },
    "NoQueryResultsFoundResponse": {
      "description": "No results found for your query."
    },
    "NotAuthorizedResponse": {
      "description": "Not authorized"
    },
    "NowPlayingFailedResponse": {
      "description": "Failed fetch nowplaying info."
    },
    "NowPlayingResponse": {
      "description": "Succesfully fetched nowplaying info.",
      "schema": {
        "type": "object",
        "required": [
          "id",
          "filename",
          "rating",
          "submitter",
          "duration",
          "addedon"
        ],
        "properties": {
          "addedon": {
            "type": "string",
            "maxLength": 128,
            "minLength": 0
          },
          "duration": {
            "type": "integer",
            "maximum": 65535,
            "minimum": 1
          },
          "elapsed": {
            "type": "integer",
            "maximum": 65535,
            "minimum": 0
          },
          "filename": {
            "type": "string",
            "maxLength": 1024,
            "minLength": 16,
            "pattern": ".*[a-zA-Z0-9_-]{11}.mp3"
          },
          "id": {
            "type": "integer"
          },
          "priority": {
            "type": "integer",
            "maximum": 10,
            "minimum": 0
          },
          "rating": {
            "type": "integer",
            "maximum": 65535,
            "minimum": 0
          },
          "submitter": {
            "type": "string",
            "maxLength": 128,
            "minLength": 1
          }
        }
      }
    },
    "QueueEmptyResponse": {
      "description": "No items found for query."
    },
    "QueueFailedResponse": {
      "description": "Failed to fetch queue"
    },
    "QueueResponse": {
      "description": "Succesfully requested a track.",
      "schema": {
        "type": "array",
        "maxItems": 16384,
        "minItems": 0,
        "uniqueItems": true,
        "items": {
          "type": "object",
          "required": [
            "id",
            "filename",
            "rating",
            "submitter",
            "duration",
            "addedon"
          ],
          "properties": {
            "addedon": {
              "type": "string",
              "maxLength": 128,
              "minLength": 0
            },
            "duration": {
              "type": "integer",
              "maximum": 65535,
              "minimum": 1
            },
            "elapsed": {
              "type": "integer",
              "maximum": 65535,
              "minimum": 0
            },
            "filename": {
              "type": "string",
              "maxLength": 1024,
              "minLength": 16,
              "pattern": ".*[a-zA-Z0-9_-]{11}.mp3"
            },
            "id": {
              "type": "integer"
            },
            "priority": {
              "type": "integer",
              "maximum": 10,
              "minimum": 0
            },
            "rating": {
              "type": "integer",
              "maximum": 65535,
              "minimum": 0
            },
            "submitter": {
              "type": "string",
              "maxLength": 128,
              "minLength": 1
            }
          }
        }
      }
    },
    "SearchResultsResponse": {
      "description": "Results for query.",
      "schema": {
        "type": "array",
        "maxItems": 16384,
        "minItems": 0,
        "uniqueItems": true,
        "items": {
          "type": "object",
          "required": [
            "id",
            "filename",
            "rating",
            "submitter",
            "duration",
            "addedon"
          ],
          "properties": {
            "addedon": {
              "type": "string",
              "maxLength": 128,
              "minLength": 0
            },
            "duration": {
              "type": "integer",
              "maximum": 65535,
              "minimum": 1
            },
            "elapsed": {
              "type": "integer",
              "maximum": 65535,
              "minimum": 0
            },
            "filename": {
              "type": "string",
              "maxLength": 1024,
              "minLength": 16,
              "pattern": ".*[a-zA-Z0-9_-]{11}.mp3"
            },
            "id": {
              "type": "integer"
            },
            "priority": {
              "type": "integer",
              "maximum": 10,
              "minimum": 0
            },
            "rating": {
              "type": "integer",
              "maximum": 65535,
              "minimum": 0
            },
            "submitter": {
              "type": "string",
              "maxLength": 128,
              "minLength": 1
            }
          }
        }
      }
    },
    "Standard500ErrorResponse": {
      "description": "An unexpected error occurred.",
      "schema": {
        "type": "object",
        "properties": {
          "detail": {
            "type": "string",
            "maxLength": 512,
            "minLength": 1
          },
          "source": {
            "type": "object",
            "properties": {
              "pointer": {
                "type": "string",
                "maxLength": 128,
                "minLength": 1
              }
            }
          },
          "status": {
            "type": "string",
            "maxLength": 3,
            "minLength": 3,
            "pattern": "^[2345][0-9]{2}$"
          }
        }
      }
    },
    "SuccesfullyRequestedTrackResponse": {
      "description": "Track succesfully added to queue.",
      "schema": {
        "type": "object",
        "required": [
          "track",
          "submitter"
        ],
        "properties": {
          "submitter": {
            "type": "string",
            "maxLength": 128,
            "minLength": 1
          },
          "track": {
            "type": "object",
            "required": [
              "id",
              "filename",
              "rating",
              "submitter",
              "duration",
              "addedon"
            ],
            "properties": {
              "addedon": {
                "type": "string",
                "maxLength": 128,
                "minLength": 0
              },
              "duration": {
                "type": "integer",
                "maximum": 65535,
                "minimum": 1
              },
              "elapsed": {
                "type": "integer",
                "maximum": 65535,
                "minimum": 0
              },
              "filename": {
                "type": "string",
                "maxLength": 1024,
                "minLength": 16,
                "pattern": ".*[a-zA-Z0-9_-]{11}.mp3"
              },
              "id": {
                "type": "integer"
              },
              "priority": {
                "type": "integer",
                "maximum": 10,
                "minimum": 0
              },
              "rating": {
                "type": "integer",
                "maximum": 65535,
                "minimum": 0
              },
              "submitter": {
                "type": "string",
                "maxLength": 128,
                "minLength": 1
              }
            }
          }
        }
      }
    },
    "TooLargeForStreamResponse": {
      "description": "Track is too large for stream"
    },
    "YidAlreadyExistsResponse": {
      "description": "Yid already downloaded"
    },
    "YidNotFoundResponse": {
      "description": "No file found at Youtube ID."
    }
  },
  "securityDefinitions": {
    "AccessSecurity": {
      "type": "apiKey",
      "name": "X-Access-Token",
      "in": "header"
    }
  },
  "security": [
    {
      "AccessSecurity": []
    }
  ]
}`))
}
